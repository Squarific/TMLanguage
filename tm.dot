digraph tm {
rankdir="LR";
accept [shape=doublecircle];
HIDDENSTARTSTATE [color=white, fontcolor=white];
HIDDENSTARTSTATE -> start [label="start"];
if1 -> write1 [label="0 / z / N"];
if1 -> write1 [label="1 / z / N"];
if1 -> write1 [label="X / z / N"];
if1 -> write1 [label="Y / z / N"];
if1 -> write1 [label="B / z / N"];
while2 -> move1 [label="0 /  / ->"];
while2 -> move1 [label="1 /  / ->"];
while2 -> move1 [label="X /  / ->"];
while2 -> move1 [label="Y /  / ->"];
while2 -> move1 [label="B /  / ->"];
write1 -> while2 [label="0 /  / N"];
move1 -> while2 [label="0 /  / N"];
write1 -> while2 [label="X /  / N"];
move1 -> while2 [label="X /  / N"];
write1 -> whileEnd2 [label="1 /  / N"];
move1 -> whileEnd2 [label="1 /  / N"];
write1 -> whileEnd2 [label="Y /  / N"];
move1 -> whileEnd2 [label="Y /  / N"];
write1 -> whileEnd2 [label="B /  / N"];
move1 -> whileEnd2 [label="B /  / N"];
if2 -> reject [label="0 /  / N"];
if2 -> reject [label="1 /  / N"];
if2 -> reject [label="X /  / N"];
if2 -> reject [label="Y /  / N"];
if2 -> reject [label="B /  / N"];
whileEnd2 -> if2 [label="B /  / N"];
whileEnd2 -> ifEnd2 [label="0 /  / N"];
whileEnd2 -> ifEnd2 [label="1 /  / N"];
whileEnd2 -> ifEnd2 [label="X /  / N"];
whileEnd2 -> ifEnd2 [label="Y /  / N"];
ifEnd2 -> write2 [label="0 / z / N"];
ifEnd2 -> write2 [label="1 / z / N"];
ifEnd2 -> write2 [label="X / z / N"];
ifEnd2 -> write2 [label="Y / z / N"];
ifEnd2 -> write2 [label="B / z / N"];
while3 -> move2 [label="0 /  / <-"];
while3 -> move2 [label="1 /  / <-"];
while3 -> move2 [label="X /  / <-"];
while3 -> move2 [label="Y /  / <-"];
while3 -> move2 [label="B /  / <-"];
write2 -> while3 [label="0 /  / N"];
move2 -> while3 [label="0 /  / N"];
write2 -> while3 [label="X /  / N"];
move2 -> while3 [label="X /  / N"];
write2 -> whileEnd3 [label="1 /  / N"];
move2 -> whileEnd3 [label="1 /  / N"];
write2 -> whileEnd3 [label="Y /  / N"];
move2 -> whileEnd3 [label="Y /  / N"];
write2 -> whileEnd3 [label="B /  / N"];
move2 -> whileEnd3 [label="B /  / N"];
if3 -> reject [label="0 /  / N"];
if3 -> reject [label="1 /  / N"];
if3 -> reject [label="X /  / N"];
if3 -> reject [label="Y /  / N"];
if3 -> reject [label="B /  / N"];
whileEnd3 -> if3 [label="B /  / N"];
whileEnd3 -> ifEnd3 [label="0 /  / N"];
whileEnd3 -> ifEnd3 [label="1 /  / N"];
whileEnd3 -> ifEnd3 [label="X /  / N"];
whileEnd3 -> ifEnd3 [label="Y /  / N"];
ifEnd3 -> write3 [label="0 / z / N"];
ifEnd3 -> write3 [label="1 / z / N"];
ifEnd3 -> write3 [label="X / z / N"];
ifEnd3 -> write3 [label="Y / z / N"];
ifEnd3 -> write3 [label="B / z / N"];
write3 -> move3 [label="0 /  / ->"];
write3 -> move3 [label="1 /  / ->"];
write3 -> move3 [label="X /  / ->"];
write3 -> move3 [label="Y /  / ->"];
write3 -> move3 [label="B /  / ->"];
while1 -> if1 [label="0 /  / N"];
move3 -> ifEnd1 [label="0 /  / N"];
while1 -> ifEnd1 [label="1 /  / N"];
move3 -> ifEnd1 [label="1 /  / N"];
while1 -> ifEnd1 [label="X /  / N"];
move3 -> ifEnd1 [label="X /  / N"];
while1 -> ifEnd1 [label="Y /  / N"];
move3 -> ifEnd1 [label="Y /  / N"];
while1 -> ifEnd1 [label="B /  / N"];
move3 -> ifEnd1 [label="B /  / N"];
if4 -> write4 [label="0 / z / N"];
if4 -> write4 [label="1 / z / N"];
if4 -> write4 [label="X / z / N"];
if4 -> write4 [label="Y / z / N"];
if4 -> write4 [label="B / z / N"];
while4 -> move4 [label="0 /  / ->"];
while4 -> move4 [label="1 /  / ->"];
while4 -> move4 [label="X /  / ->"];
while4 -> move4 [label="Y /  / ->"];
while4 -> move4 [label="B /  / ->"];
write4 -> while4 [label="1 /  / N"];
move4 -> while4 [label="1 /  / N"];
write4 -> while4 [label="X /  / N"];
move4 -> while4 [label="X /  / N"];
write4 -> whileEnd4 [label="0 /  / N"];
move4 -> whileEnd4 [label="0 /  / N"];
write4 -> whileEnd4 [label="Y /  / N"];
move4 -> whileEnd4 [label="Y /  / N"];
write4 -> whileEnd4 [label="B /  / N"];
move4 -> whileEnd4 [label="B /  / N"];
if5 -> reject [label="0 /  / N"];
if5 -> reject [label="1 /  / N"];
if5 -> reject [label="X /  / N"];
if5 -> reject [label="Y /  / N"];
if5 -> reject [label="B /  / N"];
whileEnd4 -> if5 [label="B /  / N"];
whileEnd4 -> ifEnd5 [label="0 /  / N"];
whileEnd4 -> ifEnd5 [label="1 /  / N"];
whileEnd4 -> ifEnd5 [label="X /  / N"];
whileEnd4 -> ifEnd5 [label="Y /  / N"];
ifEnd5 -> write5 [label="0 / z / N"];
ifEnd5 -> write5 [label="1 / z / N"];
ifEnd5 -> write5 [label="X / z / N"];
ifEnd5 -> write5 [label="Y / z / N"];
ifEnd5 -> write5 [label="B / z / N"];
while5 -> move5 [label="0 /  / <-"];
while5 -> move5 [label="1 /  / <-"];
while5 -> move5 [label="X /  / <-"];
while5 -> move5 [label="Y /  / <-"];
while5 -> move5 [label="B /  / <-"];
write5 -> while5 [label="1 /  / N"];
move5 -> while5 [label="1 /  / N"];
write5 -> while5 [label="X /  / N"];
move5 -> while5 [label="X /  / N"];
write5 -> whileEnd5 [label="0 /  / N"];
move5 -> whileEnd5 [label="0 /  / N"];
write5 -> whileEnd5 [label="Y /  / N"];
move5 -> whileEnd5 [label="Y /  / N"];
write5 -> whileEnd5 [label="B /  / N"];
move5 -> whileEnd5 [label="B /  / N"];
if6 -> reject [label="0 /  / N"];
if6 -> reject [label="1 /  / N"];
if6 -> reject [label="X /  / N"];
if6 -> reject [label="Y /  / N"];
if6 -> reject [label="B /  / N"];
whileEnd5 -> if6 [label="B /  / N"];
whileEnd5 -> ifEnd6 [label="0 /  / N"];
whileEnd5 -> ifEnd6 [label="1 /  / N"];
whileEnd5 -> ifEnd6 [label="X /  / N"];
whileEnd5 -> ifEnd6 [label="Y /  / N"];
ifEnd6 -> write6 [label="0 / z / N"];
ifEnd6 -> write6 [label="1 / z / N"];
ifEnd6 -> write6 [label="X / z / N"];
ifEnd6 -> write6 [label="Y / z / N"];
ifEnd6 -> write6 [label="B / z / N"];
write6 -> move6 [label="0 /  / ->"];
write6 -> move6 [label="1 /  / ->"];
write6 -> move6 [label="X /  / ->"];
write6 -> move6 [label="Y /  / ->"];
write6 -> move6 [label="B /  / ->"];
ifEnd1 -> if4 [label="1 /  / N"];
move6 -> ifEnd4 [label="1 /  / N"];
ifEnd1 -> ifEnd4 [label="0 /  / N"];
move6 -> ifEnd4 [label="0 /  / N"];
ifEnd1 -> ifEnd4 [label="X /  / N"];
move6 -> ifEnd4 [label="X /  / N"];
ifEnd1 -> ifEnd4 [label="Y /  / N"];
move6 -> ifEnd4 [label="Y /  / N"];
ifEnd1 -> ifEnd4 [label="B /  / N"];
move6 -> ifEnd4 [label="B /  / N"];
start -> while1 [label="0 /  / N"];
ifEnd4 -> while1 [label="0 /  / N"];
start -> while1 [label="1 /  / N"];
ifEnd4 -> while1 [label="1 /  / N"];
start -> whileEnd1 [label="X /  / N"];
ifEnd4 -> whileEnd1 [label="X /  / N"];
start -> whileEnd1 [label="Y /  / N"];
ifEnd4 -> whileEnd1 [label="Y /  / N"];
start -> whileEnd1 [label="B /  / N"];
ifEnd4 -> whileEnd1 [label="B /  / N"];
if7 -> accept [label="0 /  / N"];
if7 -> accept [label="1 /  / N"];
if7 -> accept [label="X /  / N"];
if7 -> accept [label="Y /  / N"];
if7 -> accept [label="B /  / N"];
whileEnd1 -> if7 [label="B /  / N"];
whileEnd1 -> ifEnd7 [label="0 /  / N"];
whileEnd1 -> ifEnd7 [label="1 /  / N"];
whileEnd1 -> ifEnd7 [label="X /  / N"];
whileEnd1 -> ifEnd7 [label="Y /  / N"];
}