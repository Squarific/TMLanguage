digraph tm {
rankdir="LR";
accept [shape=doublecircle];
HIDDENSTARTSTATE [color=white, fontcolor=white];
HIDDENSTARTSTATE -> start [label="start"];
start -> move1 [label="a /  / <-"];
start -> move1 [label="b /  / <-"];
start -> move1 [label="c /  / <-"];
start -> move1 [label="d /  / <-"];
move1 -> move2 [label="a /  / <-"];
move1 -> move2 [label="b /  / <-"];
move1 -> move2 [label="c /  / <-"];
move1 -> move2 [label="d /  / <-"];
move2 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 [label="a /  / N"];
move2 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 [label="b /  / N"];
move2 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 [label="c /  / N"];
move2 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 [label="d /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 -> move3 [label="a /  / <-"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 -> move3 [label="b /  / <-"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 -> move3 [label="c /  / <-"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1 -> move3 [label="d /  / <-"];
move3 -> write1 [label="a / z / N"];
move3 -> write1 [label="b / z / N"];
move3 -> write1 [label="c / z / N"];
move3 -> write1 [label="d / z / N"];
if1 -> move4 [label="a /  / <-"];
if1 -> move4 [label="b /  / <-"];
if1 -> move4 [label="c /  / <-"];
if1 -> move4 [label="d /  / <-"];
write1 -> if1 [label="c /  / N"];
move4 -> ifEnd1 [label="c /  / N"];
write1 -> ifEnd1 [label="a /  / N"];
move4 -> ifEnd1 [label="a /  / N"];
write1 -> ifEnd1 [label="b /  / N"];
move4 -> ifEnd1 [label="b /  / N"];
write1 -> ifEnd1 [label="d /  / N"];
move4 -> ifEnd1 [label="d /  / N"];
ifEnd1 -> move5 [label="a /  / ->"];
ifEnd1 -> move5 [label="b /  / ->"];
ifEnd1 -> move5 [label="c /  / ->"];
ifEnd1 -> move5 [label="d /  / ->"];
move5 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end [label="a /  / N"];
move5 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end [label="b /  / N"];
move5 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end [label="c /  / N"];
move5 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end [label="d /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end -> move6 [label="a /  / ->"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end -> move6 [label="b /  / ->"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end -> move6 [label="c /  / ->"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_1_end -> move6 [label="d /  / ->"];
move6 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 [label="a /  / N"];
move6 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 [label="b /  / N"];
move6 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 [label="c /  / N"];
move6 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 [label="d /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 -> move7 [label="a /  / <-"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 -> move7 [label="b /  / <-"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 -> move7 [label="c /  / <-"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2 -> move7 [label="d /  / <-"];
move7 -> write2 [label="a / z / N"];
move7 -> write2 [label="b / z / N"];
move7 -> write2 [label="c / z / N"];
move7 -> write2 [label="d / z / N"];
if2 -> move8 [label="a /  / <-"];
if2 -> move8 [label="b /  / <-"];
if2 -> move8 [label="c /  / <-"];
if2 -> move8 [label="d /  / <-"];
write2 -> if2 [label="c /  / N"];
move8 -> ifEnd2 [label="c /  / N"];
write2 -> ifEnd2 [label="a /  / N"];
move8 -> ifEnd2 [label="a /  / N"];
write2 -> ifEnd2 [label="b /  / N"];
move8 -> ifEnd2 [label="b /  / N"];
write2 -> ifEnd2 [label="d /  / N"];
move8 -> ifEnd2 [label="d /  / N"];
ifEnd2 -> move9 [label="a /  / ->"];
ifEnd2 -> move9 [label="b /  / ->"];
ifEnd2 -> move9 [label="c /  / ->"];
ifEnd2 -> move9 [label="d /  / ->"];
move9 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end [label="a /  / N"];
move9 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end [label="b /  / N"];
move9 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end [label="c /  / N"];
move9 -> function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end [label="d /  / N"];
while1 -> move10 [label="a /  / <-"];
while1 -> move10 [label="b /  / <-"];
while1 -> move10 [label="c /  / <-"];
while1 -> move10 [label="d /  / <-"];
move10 -> move11 [label="a /  / ->"];
move10 -> move11 [label="b /  / ->"];
move10 -> move11 [label="c /  / ->"];
move10 -> move11 [label="d /  / ->"];
move11 -> write3 [label="a / z / N"];
move11 -> write3 [label="b / z / N"];
move11 -> write3 [label="c / z / N"];
move11 -> write3 [label="d / z / N"];
write3 -> accept [label="a /  / N"];
write3 -> accept [label="b /  / N"];
write3 -> accept [label="c /  / N"];
write3 -> accept [label="d /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end -> while1 [label="a /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end -> while1 [label="b /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end -> whileEnd1 [label="c /  / N"];
function_WRITE_C_TO_OUR_LEFT_AND_RETURN_2_end -> whileEnd1 [label="d /  / N"];
if3 -> move12 [label="a /  / ->"];
if3 -> move12 [label="b /  / ->"];
if3 -> move12 [label="c /  / ->"];
if3 -> move12 [label="d /  / ->"];
whileEnd1 -> if3 [label="a /  / N"];
move12 -> ifEnd3 [label="a /  / N"];
whileEnd1 -> ifEnd3 [label="b /  / N"];
move12 -> ifEnd3 [label="b /  / N"];
whileEnd1 -> ifEnd3 [label="c /  / N"];
move12 -> ifEnd3 [label="c /  / N"];
whileEnd1 -> ifEnd3 [label="d /  / N"];
move12 -> ifEnd3 [label="d /  / N"];
if4 -> accept [label="a /  / N"];
if4 -> accept [label="b /  / N"];
if4 -> accept [label="c /  / N"];
if4 -> accept [label="d /  / N"];
ifEnd3 -> if4 [label="b /  / N"];
ifEnd3 -> ifEnd4 [label="a /  / N"];
ifEnd3 -> ifEnd4 [label="c /  / N"];
ifEnd3 -> ifEnd4 [label="d /  / N"];
}